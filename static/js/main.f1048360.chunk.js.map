{"version":3,"sources":["components/heading.js","components/editor.js","components/preview.js","components/credit.js","components/share-button.js","components/share.js","App.js","serviceWorker.js","index.js"],"names":["Heading","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","id","Component","Editor","className","value","text","onChange","event","Preview","renderer","marked","Renderer","link","href","title","prototype","replace","setOptions","gfm","breaks","markup","__html","dangerouslySetInnerHTML","ShareButton","target","iconClass","Share","share_button","App","_this","state","handleEvent","bind","assertThisInitialized","e","setState","heading","editor","preview","credit","share","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f1048360.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Heading extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        \t<h1 id=\"heading\">\r\n        \t\tMarkdown Previewer\r\n        \t</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Heading;\r\n","import React, { Component } from 'react';\r\n\r\nclass Editor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        \t<div id=\"editor-window\" className=\"window\">\r\n        \t\t<h2 className=\"header\">\r\n        \t\t\tEditor\r\n        \t\t</h2>\r\n        \t\t<textarea id=\"editor\" value={this.props.text} onChange={this.props.event} />\r\n        \t</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Editor;\r\n","import React, { Component } from 'react';\r\nimport marked from 'marked';\r\n\r\nclass Preview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render() {\r\n    \tvar renderer = new marked.Renderer();\r\n    \trenderer.link = function(href, title, text){\r\n    \t\tvar link = marked.Renderer.prototype.link.call(this, href, title, text);\r\n    \t\treturn link.replace(\"<a\",\"<a target='_blank' \");\r\n    \t}\r\n    \tmarked.setOptions({\r\n    \t\trenderer: renderer,\r\n    \t\tgfm: true,\r\n    \t\tbreaks: true\r\n    \t})\r\n    \tvar markup = {__html: marked(this.props.text)};\r\n        return (\r\n        \t<div id=\"preview-window\" className=\"window\">\r\n\t        \t<h2 className=\"header\">\r\n\t        \t\t\tPreview\r\n\t    \t\t</h2>\r\n\t            <div id=\"preview\" dangerouslySetInnerHTML={markup} />\r\n        \t</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Preview;\r\n","import React, { Component } from 'react';\r\n\r\nclass Preview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span id=\"credit\">\r\n            \t&copy; 2019 David Andrews\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Preview;\r\n","import React, { Component } from 'react';\r\n\r\nclass ShareButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <a href={this.props.link} target=\"_blank\">\r\n            \t<i className={this.props.iconClass} />\r\n            </a>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShareButton;\r\n","import React, { Component } from 'react';\r\nimport ShareButton from './share-button';\r\n\r\nclass Share extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n    \t// Facebook App ID: 917367541987223\r\n        return (\r\n        \t<div id=\"share\">\r\n        \t\t<span id=\"share-text\">Share this app ></span>\r\n        \t\t<ShareButton iconClass=\"fab fa-facebook\" link=\"https://www.facebook.com/dialog/share?app_id=917367541987223&display=popup&href=https%3A%2F%2Fdardinodavid.github.io%2Fmarkdown-previewer&redirect_uri=https%3A%2F%2Fdardinodavid.github.io%2Fmarkdown-previewer\" />\r\n        \t\t<ShareButton iconClass=\"fab fa-twitter\" link=\"https://twitter.com/intent/tweet?text=Markdown%20Previewer&url=http://dardinodavid.github.io/markdown-previewer\" />\r\n        \t</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Share;\r\n","import React, { Component } from 'react';\nimport Heading from './components/heading';\nimport Editor from './components/editor';\nimport Preview from './components/preview';\nimport Credit from './components/credit';\nimport Share from './components/share';\nimport ShareButton from './components/share-button';\n\nclass App extends Component {\nconstructor(props){\n  super(props);\n  this.state = {\n    text: '# Welcome to my Markdown Previewer!\\n\\n## Looks simple enough!\\n\\n[I am a link to Google](http://www.google.com)\\n\\nThis is some inline `code`\\n\\n```\\n<button>\\n\\tThis is the button\\n</button>\\n```\\n\\n* List Item 1\\n\\n> This is a blockquote!\\n\\n![A bardino](http://www.worldlydogs.com/uploads/5/2/2/3/52234445/bardino-majorero300_orig.png)\\n\\n**This is bolded text**'\n    }\n  this.handleEvent = this.handleEvent.bind(this);\n}\n\nhandleEvent(e){\n  this.setState({ text: e.target.value });\n}\n\nrender() {\n    return (\n      <div className=\"App\">\n        <header>\n          <Heading />\n        </header>\n        <main>\n          <Editor text={this.state.text} event={this.handleEvent} />\n          <Preview text={this.state.text} />\n        </main>\n        <footer>\n          <Credit />\n          <Share />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}